#!/bin/bash

# Get the directory of the current script
DOTFILES=$(cd $(dirname "${BASH_SOURCE[0]}") && pwd)

# Function to create symlink and remove existing files
create_symlink() {
  local target=$1
  local link_name=$2
  rm -rf $link_name
  ln -s $target $link_name
}

# Check for '--new' flag
NEW_FLAG=false
if [[ "$1" == "--new" ]]; then
  NEW_FLAG=true
fi

# Link default configuration files
create_symlink "$DOTFILES/default-configs/eslintrc.json" "$HOME/.eslintrc.json"
create_symlink "$DOTFILES/default-configs/rubocop.yml" "$HOME/.rubocop.yml"
create_symlink "$DOTFILES/default-configs/solargraph.yml" "$HOME/.solargraph.yml"
create_symlink "$DOTFILES/default-configs/rspec.conf" "$HOME/.rspec"

# Warp terminal setup
mkdir -p $HOME/.warp/themes
create_symlink "$DOTFILES/warp/darkmode.yaml" "$HOME/.warp/themes/darkmode.yaml"

# Alacritty terminal setup
create_symlink "$DOTFILES/terminals/alacritty/alacritty.toml" "$HOME/.alacritty.toml"
mkdir -p $HOME/.config/alacritty
create_symlink "$DOTFILES/terminals/alacritty/colorscheme.toml" "$HOME/.config/alacritty/colorscheme.toml"

# Kitty terminal setup
create_symlink "$DOTFILES/terminals/kitty" "$HOME/.config/kitty"

# Aliases setup
create_symlink "$DOTFILES/zsh/aliases" "$HOME/.aliases"

# Zsh setup
create_symlink "$DOTFILES/zsh/core/" "$HOME/.zsh"
create_symlink "$DOTFILES/zsh/zshenv" "$HOME/.zshenv"
create_symlink "$DOTFILES/zsh/zshrc" "$HOME/.zshrc"
create_symlink "$DOTFILES/zsh/zprofile" "$HOME/.zprofile"
create_symlink "$DOTFILES/zsh/starship.toml" "$HOME/.config/starship.toml"

# Tmux setup
create_symlink "$DOTFILES/tmux/tmux.conf" "$HOME/.tmux.conf"

# Scripts setup
mkdir -p $HOME/.local/bin
create_symlink "$DOTFILES/scripts/t" "$HOME/.local/bin/t"

# Git configuration
create_symlink "$DOTFILES/git/gitconfig" "$HOME/.gitconfig"

# Neovim setup
create_symlink "$DOTFILES/nvim" "$HOME/.config/nvim"

# PHP refactoring tools setup
create_symlink "$DOTFILES/phpactor" "$HOME/.config/phpactor"

# Homebrew setup (uncomment if needed)
# create_symlink "$DOTFILES/homebrew/Brewfile" "$HOME/Brewfile"
# brew install

# Execute additional scripts if 'new' flag is present
if $NEW_FLAG; then
  echo "Executing additional setup scripts for new setup..."

  echo "Installing homebrew apps..."
  xargs brew install < homebrew/apps.txt

  echo "Additional setup complete."
fi
